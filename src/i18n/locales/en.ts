export default {
	settings: {
		account: {
			name: 'Account',
			desc: 'Enter your WebDAV account',
			placeholder: 'Enter your account',
		},
		credential: {
			name: 'Credential',
			desc: 'Enter your WebDAV credential',
			placeholder: 'Enter your credential',
		},
		checkConnection: {
			name: 'Check connection',
			desc: 'Click to check WebDAV connection',
			success: 'WebDAV connection successful',
			failure: 'WebDAV connection failed',
			successButton: 'Connected ✓',
			failureButton: 'Failed ×',
		},
		remoteDir: {
			name: 'Remote directory',
			desc: 'Enter the remote directory',
			placeholder: 'Enter the remote directory',
			edit: 'Edit',
		},
		login: {
			name: 'Login',
			desc: 'Click to login',
			success: 'Login successful',
			failure: 'Login failed, please try again',
		},
		loginMode: {
			name: 'Login mode',
			manual: 'Manual input',
			sso: 'Single sign-on',
		},
		ssoStatus: {
			loggedIn: 'Logged in',
			notLoggedIn: 'Not logged in',
			logout: 'Logout',
			logoutSuccess: 'Logged out successfully',
		},
		useGitStyle: {
			name: 'Use git-style conflict markers',
			desc: 'Use <<<<<<< and >>>>>>> markers for conflicts instead of HTML tags',
		},
		backupWarning: {
			name: 'Backup warning',
			desc: '⚠️ Note: Sync process will modify or delete local files. Please backup important files before syncing.',
		},
		conflictStrategy: {
			name: 'Conflict resolution strategy',
			desc: 'Choose how to resolve file conflicts. \nNote: It is recommended to backup important files before using auto-merge feature to prevent data loss.',
			diffMatchPatch: 'Smart merge (recommended)',
			latestTimestamp: 'Use latest version',
		},
		confirmBeforeSync: {
			name: 'Confirm before sync',
			desc: 'Show pending tasks and execute after confirmation',
		},
		realtimeSync: {
			name: 'Real-time sync',
			desc: 'Automatically sync changes as soon as files are modified',
		},
		syncMode: {
			name: 'Sync mode',
			desc: 'Choose between strict or loose sync mode. Loose mode is recommended for users with many files to achieve faster sync speed. In loose mode, files with the same name and equal size will be ignored during the first sync.',
			strict: 'Strict',
			loose: 'Loose',
		},
		startupSyncDelay: {
			name: 'Auto-sync on startup',
			desc: 'Set the number of seconds after startup to automatically perform a sync. Set to 0 to disable auto-sync on startup.',
			placeholder: 'Enter seconds (e.g., 5, 0 to disable)',
		},
		autoSyncInterval: {
			name: 'Auto-sync interval',
			desc: 'Set the interval for automatic background synchronization (in minutes)',
			placeholder: 'Enter minutes (e.g., 5)',
		},
		sections: {
			account: 'Account',
			common: 'General',
			filters: 'Filter rules',
		},
		logout: {
			confirmTitle: 'Confirm logout',
			confirmMessage:
				'Are you sure you want to log out? You will need to log in again to continue syncing.',
			confirm: 'Confirm logout',
			cancel: 'Cancel',
		},
		help: {
			name: 'How to get WebDAV account and credential?',
			desc: 'Click to view help documentation',
		},
		filters: {
			name: 'Sync filters',
			desc: 'Add paths to filter files or folders, e.g.: .DS_Store, .git',
			add: 'Add rule',
			remove: 'Remove',
			confirmRemove: 'Confirm remove',
			edit: 'Edit rules',
			save: 'Save',
			cancel: 'Cancel',
			placeholder: 'e.g.: .DS_Store, *.pdf',
			description:
				'Files or folders matching these patterns will be ignored during sync. Use * for wildcard matching.',
			exclude: {
				name: 'Exclusion rules',
				desc: 'Files/folders matching these patterns will NOT be synced.',
			},
			include: {
				name: 'Inclusion rules',
				desc: 'Files/folders matching these patterns WILL be synced (if defined).',
			},
		},
		skipLargeFiles: {
			name: 'Skip large files',
			desc: 'Files exceeding this size will be skipped during synchronization. If sync crashes occur, try lowering this value. Leave empty for no limit.',
			placeholder: 'e.g., 10 MiB or 500 KiB',
		},
		log: {
			title: 'Debug logs',
			name: 'Console logs',
			desc: 'View console output and debug information',
			button: 'View logs',
			clear: 'Clear',
			cleared: 'Console logs cleared',
			clearName: 'Clear logs',
			clearDesc: 'Delete all console output records',
		},
		cache: {
			title: 'Cache management',
			dump: 'Export',
			dumpName: 'Cache management',
			dumpDesc:
				'The plugin stores information about your remote folders locally on your device. When you switch to a new device, this information is lost and needs to be rebuilt before syncing. For users with many files, rebuilding can be slow due to Nutstore access limits. Export saves this information to Nutstore, while Import retrieves it, allowing immediate syncing on new devices without waiting for a slow rebuild.',
			restoreName: 'Import cache',
			restoreDesc:
				'Import previously exported cache data from Nutstore to your device. This lets you sync immediately on a new device without the long waiting time normally needed to scan all your files.',
			restore: 'Import',
			clearName: 'Clear local cache',
			clearDesc:
				'Delete local cache data stored on this device only. This action cannot be undone and will require rebuilding the cache before the next sync. Your Nutstore data remains intact.',
			clear: 'Clear',
			confirm: 'Confirm clear',
			cleared: 'Cache cleared successfully',
			clearModal: {
				title: 'Clear cache',
				description:
					'Select which cache types to clear. This action cannot be undone.',
				cancel: 'Cancel',
				confirm: 'Confirm clear',
				deltaCache: {
					name: 'Delta cache',
					desc: 'Stores information about incremental file changes.',
				},
				syncRecordCache: {
					name: 'Sync record cache',
					desc: 'Tracks synchronization status for each file.',
				},
				blobCache: {
					name: 'File snapshot cache',
					desc: 'Stores file snapshots needed for comparing changes during sync.',
				},
				clearedType: 'Cleared: {{types}}',
				nothingSelected: 'Please select at least one cache type to clear.',
			},
			exportSuccess: 'Cache saved to plugin data file successfully',
			exportError: 'Error saving cache: {{message}}',
			noDataToRestore: 'No saved cache data found',
			restoreSuccess: 'Cache restored successfully',
			restoreError: 'Error restoring cache: {{message}}',
			remoteCacheDir: {
				name: 'Remote cache directory',
				desc: 'Enter the remote directory for cache storage',
				placeholder: 'Enter the remote cache directory',
				edit: 'Edit',
			},
			saveModal: {
				title: 'Save cache',
				description:
					'Enter a filename to save the current cache state. The file will be saved in the remote cache directory.',
				filename: 'Filename',
				save: 'Save',
				cancel: 'Cancel',
				success: 'Cache saved successfully',
				error: 'Error saving cache: {{message}}',
			},
			restoreModal: {
				title: 'Restore cache',
				description: 'Select a cache file to restore from or delete.',
				restore: 'Restore',
				delete: 'Delete',
				deleteConfirm: 'Confirm delete',
				close: 'Close',
				refresh: 'Refresh',
				noFiles: 'No cache files found',
				fileNotFound: 'Cache file not found',
				success: 'Cache restored successfully',
				error: 'Error restoring cache: {{message}}',
				loadError: 'Error loading file list: {{message}}',
				deleteSuccess: 'Cache file deleted successfully',
				deleteError: 'Error deleting cache file: {{message}}',
			},
		},
	},
	sync: {
		failed: 'Sync failed!',
		error: {
			folderButFile: 'Expected folder but found file: {{path}}',
			notFound: 'Not found: {{path}}',
			localPathNotFound: 'Local path not found: {{path}}',
			cannotMergeBinary: 'Cannot merge binary file',
			failedToAutoMerge: 'Failed to auto merge',
			failedToUploadMerged: 'Failed to upload merged content',
			conflictsMarkedInFile: 'Conflicts found and marked in file',
			requestsTooFrequent:
				'Requests too frequent, please wait a few minutes and try again',
		},
		requestsTooFrequent:
			'Requests too frequent, plugin will resume sync at {{time}}',
		start: '⌛️ Sync started',
		complete: '✅ Sync completed',
		completeWithFailed: '❌ Sync completed with {{failedCount}} failed tasks',
		failedWithError: 'Sync failed with error: {{error}}',
		progress: 'Sync progress: {{percent}}%',
		startButton: 'Start sync',
		stopButton: 'Stop sync',
		hideButton: 'Hide',
		showProgressButton: 'Show sync progress',
		notSyncing: 'No sync currently in progress',
		percentComplete: '{{percent}}%',
		currentFile: '{{path}}',
		filePath: '{{path}}',
		progressTitle: 'Sync progress',
		progressStats: 'Completed: {{completed}} / {{total}} tasks',
		completedFilesTitle: 'Completed tasks',
		syncingFiles: 'Syncing files...',
		updatingCache: 'Updating local cache...',
		cacheUpdated: 'Local cache updated.',
		failedStatus: 'Sync failed',
		cancelled: 'Sync cancelled',
		suggestUseClientForManyTasks:
			'Tips: When there are many sync tasks, it is recommended to use Nutstore client for better performance and stability. The plugin is more suitable for mobile use!',
		modalTitle: 'Syncing',
		cancelButton: 'Cancel sync',
		progressText: 'Syncing files',
		fileOp: {
			createLocalDir: 'Create local directory',
			createRemoteDir: 'Create remote directory',
			download: 'Download',
			filenameError: 'Invalid path characters',
			merge: 'Merge',
			removeLocal: 'Remove local',
			removeRemote: 'Remove remote',
			sync: 'Sync',
			upload: 'Upload',
		},
		confirmModal: {
			title: 'Sync confirmation',
			message:
				'⚠️ Please note:\n\n1. Sync operation may modify or delete local files\n2. It is recommended to backup important files before syncing\n3. In case of file conflicts, manual resolution may be required\n4. Initial sync will process all files and may take longer, please be patient\n\nAre you sure you want to start syncing?',
			confirm: 'Confirm sync',
			cancel: 'Cancel',
			remoteDir: 'Remote directory: {{dir}}',
			strategy: 'Sync strategy: {{strategy}}',
		},
	},
	taskList: {
		title: 'Sync task list',
		instruction:
			'Please review the tasks below. Click "Continue" to execute the selected tasks, or "Cancel" to skip this sync.',
		execute: 'Execute',
		action: 'Action',
		localPath: 'Local path',
		remotePath: 'Remote path',
		continue: 'Continue',
		cancel: 'Cancel',
	},
	textAreaModal: {
		copy: 'Copy',
		close: 'Close',
		copied: 'Text copied to clipboard',
	},
}
